@model RésuméBuilder.Models.Applicant

@{
    ViewBag.Title = "ApplicantDetails";
    int id = Model.ApplicantID;
}


<!-- Internal CSS Styling -->
@Html.Partial("_InternalStyle")

<!-- Navigation Bar with Partial View -->
@Html.Partial("_NavBar")

<h2>Applicant Details for @Model.ApplicantUsername</h2>

<br />

<table class="applicantDetails" cellspacing="70">
    <thead>
        <tr><th>REGISTERED ID</th><th>REGISTERED USERNAME</th></tr>
    </thead>
    <tbody>
        <tr><td>@Model.ApplicantID</td><td>@Model.ApplicantUsername</td></tr>
    </tbody>
</table>

<br />

<h3>Résumé Built</h3>

<div>

    <!-- VIEW FULL RESUME USING VIEW MODEL -->
    <p>
        VIEW FULL RÉSUMÉ

        @Html.ActionLink("[HERE!]", "ResumeVM", new { applicantID = id })

    </p>

</div>

<br />
<br />

<h3>Add Your Outstanding Details</h3>

<div>

    <p>
        Add Personal Information
        <!-- Link to: /Views/Personals/AddPersonalDetailsPageView/{applicantID}
            <a href="Views/Personals/AddPersonalDetailsPageView/@Model.ApplicantID">

            -->
        <a href="/Personals/AddPersonalsPageView/@Model.ApplicantID">HERE</a>
    </p>


    <p>
        Add Skill Information
        <!-- Link to: /Views/Personals/AddPersonalDetailsPageView/{applicantID}
            <a href="Views/Personals/AddPersonalDetailsPageView/@Model.ApplicantID">

            -->
        <a href="/Skills/AddSkillsPageView/@Model.ApplicantID">HERE</a>
    </p>

    <p>
        Add Job Information
        <!-- Link to: /Views/Personals/AddPersonalDetailsPageView/{applicantID}
            <a href="Views/Personals/AddPersonalDetailsPageView/@Model.ApplicantID">

            -->
        <a href="/Jobs/AddJobsPageView/@Model.ApplicantID">HERE</a>
    </p>


</div>

<br />
<br />

<div>

    <h3>ADVANCED DATA INPUT</h3>

    <table id="applicantinput_table" cellspacing="50">

        <tbody>


            <tr>
                <td>PERSONALS</td>
                <td>
                    @Html.ActionLink("[ADD]", "AddPersonalsPageView", "Personals", new { applicantID = id }, null)
                </td>
                <td>
                    @Html.ActionLink("[EDIT]", "EditPersonalsPageView", "Personals", new { applicantID = id }, null)
                </td>
            </tr>


            <tr>
                <td>JOBS</td>
                <td>
                    @Html.ActionLink("[ADD]", "AddJobsPageView", "Jobs", new { applicantID = id }, null)
                </td>
                <td>
                    @Html.ActionLink("[EDIT]", "EditJobsPageView", "Jobs", new { applicantID = id }, null)
                </td>
            </tr>


            <tr>
                <td>SKILLS</td>
                <td>
                    @Html.ActionLink("[ADD]", "AddSkillsPageView", "Skills", new { applicantID = id }, null)
                </td>
                <td>
                    @Html.ActionLink("[EDIT]", "EditSkillsPageView", "Skills", new { applicantID = id }, null)
                </td>
            </tr>





        </tbody>

    </table>



</div>


<!--

    Add Personals using ApplicantID

    using model ->"at" RésuméBuilder.Models.Applicant

    In relevant Controller:
    public ActionResult AddPersonalActionForm(Personal personalRecord)
    {

        var personalTable = dbContext.personalDB;

        personalTable.Add(personalRecord);
        dbContext.SaveChanges();

        int applicantID = personalRecord.ApplicantID;

        return RedirectToAction("ListOfApplicantsPageView", "Applicants");

        OR

        return RedirectToAction("ApplicantDetails(applicantID)", "Applicants")

    }



    Click to Add Personal -


    AddPersonalPageView ================

    PAGE VIEW:
    [ATTRIBUTE ROUTING REQUIRED IN CONTROLLER METHOD]
    /Views/Personals/AddPersonalDetailsPageView/{applicantID}

    FORM ACTION:
    - AUTOINCREMENT OCCURS FOR PersonalEntryID (Primary Key)
    - AUTO-FILL FORM BOX FOR APPLICANTID WITH {applicantID} [CRITICAL]
    - The remaining fields will be manually filled using form input

    @Model.ApplicantID just like link from List of Applicants to Applicant Details

    @Html.TextBoxFor(p => p.ApplicantID, new { @class = "form-control" })

    This way, Applicant.ApplicantID == Personal.ApplicantID

    Once ApplicantID are tied, easier to traverse records to pull a specific one






-->
<!--

    Adding and using multiple Models in a View
    http://www.dotnet-stuff.com/tutorials/aspnet-mvc/way-to-use-multiple-models-in-a-view-in-asp-net-mvc





-->
