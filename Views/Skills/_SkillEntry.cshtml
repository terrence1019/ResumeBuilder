<h1>SUBMISSION PAGE</h1>


@{ 
    //Due to the nature of a Session variable, we have to convert it to an integer
    var id = Convert.ToInt32(Session["id"]);
}

<h3>ENTER DATA</h3>

<table>

    <tbody>

        <tr>
            <td><button id="addrow" type="button">[ADD A SKILL ROW]</button></td>
            <td><button id="submitallrows" type="button" onclick="SubmitAllRows()">[SUBMIT ALL ROWS]</button></td>
            <td><button id="deleteallrows" type="button" onclick="RemoveAllRows()">[DELETE ALL ROWS]</button></td>
        </tr>

    </tbody>

</table>

<br />

<script type="text/javascript">

        var count = 0;
        



        //The aim is that when a new div is dynamically added,
        //the code to call _SkillRowCreate PartialView is triggered based on class/id property

        //AddDivContainer using rowid
        //LoadPartialInDivContainer using rowid

        $("#addrow").click(function () {

            //window.alert(@id);

            CreateRow(count);

            
            count++;
            

            

        });

</script>

<script>

        function CheckName(x) {

            //To Delete an item using remove(), it requires the parent to be deleted.
            //Therefore, to work effectively, the child item should be stored in a parent,
            //such as a <div>
            AlertName(x);

        }

        function AlertName(x) {

            window.alert("TEST: " + x);

        }



        //REMOVE A SINGLE SKILL ROW
        function RemoveRow(elem) {

            //To Delete an item using remove(), it requires the parent to be deleted.
            //Therefore, to work effectively, the child item should be stored in a parent,
            //such as a <div>
            elem.parentElement.remove();

            //Adjust counter (decrement)
            count--;

        }//RemoveRow()


        //REMOVE ALL ELEMENTS STORED IN A PARENT DIV (BY REMOVING PARENT DIV ITSELF)
        function RemoveDiv() {

            //https://bobbyhadz.com/blog/javascript-remove-parent-element
            const child = document.getElementById('totalremoval');

            child.parentElement.remove();

        }//RemoveDiv()


        //CALL FUNCTION TO REMOVE ALL SKILL ROWS
        function RemoveAllRows(elem) {


            if (count > 0) {

                //Call RemoveRow() for div with id "totalremoval"
                RemoveDiv();


                //Re-add a parent container so that new rows can be added afterwards
                var container = $(`<div id="container"></div></br>`);
                $("#main").append(container);


                //Re-add delete-all div also
                var deletealldiv = $(`<div id="totalremoval"></div>`);
                $("#container").append(deletealldiv);

                //Reset row counter
                count = 0;
                

            }


        }//RemoveAllRows()



</script>


<script>

        function CreateRow(count) {

            //window.alert("CREATING ROW: " + count);

            var rowid = "row_" + count;
            //window.alert("ROW ID: " + rowid);

            //var loadid = "#" + rowid;
            //window.alert("LOAD ID: " + loadid);

            var classid = "submit";

            var divOpen = $(`<div>`);
            var divClose = $(`</div></br>`);

            //https://www.codegrepper.com/code-examples/java/create+a+button+using+javascript
            var skillrowOpen = $(`<div id="${rowid}" class="${classid} name="skill" >`);
            var skillrowClose = $(`</div></br></br>`);

            var clickid = "submit" + rowid;
            //window.alert(clickid);

            var rowCategoryID = rowid + "_skillcategory";
            var rowPointID = rowid + "_skillpoint";

            var inputFieldCategory = $(`<input name="SkillCategory" type="text" class="skillcategory" id="${rowCategoryID}" placeholder="Skill Category" />`);
            var inputFieldPoint = $(`<input name="SkillPoint" type="text" class="skillpoint" id="${rowPointID}" placeholder="Skill Point" />`);





            //SUBMIT ROW BUTTON
            //https://sebhastian.com/javascript-create-button/
            var sub_btn = document.createElement("button");
            sub_btn.innerHTML = "SUBMIT ROW";
            sub_btn.type = "button";
            sub_btn.name = "formBtn_Submit";
            sub_btn.class = "submitone";
            sub_btn.onclick = function () {

                //CheckName(rowid);
                SubmitRow(rowid);
                window.alert("Submission Complete!");
                RemoveRow(this);

            };
            sub_btn.style.background = "mediumblue";
            sub_btn.style.color = "white";
            sub_btn.style.borderRadius = "3px";


            //DELETE ROW BUTTON
            //https://sebhastian.com/javascript-create-button/
            var del_btn = document.createElement("button");
            del_btn.innerHTML = "DELETE ROW";
            del_btn.type = "button";
            del_btn.name = "formBtn_Delete";
            del_btn.class = "deleteone";
            del_btn.onclick = function () {

                RemoveRow(this);

            }
            del_btn.style.background = "darkred";
            del_btn.style.color = "white";
            del_btn.style.borderRadius = "3px";

            /*
            var testString =
                divOpen
                    .append(skillrowOpen)
                    .append(inputFieldCategory)
                    .append(inputFieldPoint)
                    .append(sub_btn)
                    .append(del_btn)
                    .append(skillrowClose)
                    .append(divClose);

            var SkillRowTest =
                divOpen.append(inputFieldCategory).append(divClose);

            var skillrow = divOpen.append(
                skillrowOpen.append(
                    inputFieldCategory.append(
                        skillrowClose.append(divClose))));
            */

            var record = divOpen.append(

                skillrowOpen.append(

                    inputFieldCategory,
                    inputFieldPoint,
                    sub_btn,
                    del_btn
                    
                ).append(
                    skillrowClose.append(
                        divClose
                    )
                )
            );


            //$("#container").append(inputFieldCategory);
            //$("#container").append(SkillRow);
            //$("#container").append(testString);
            //$("#container").append(skillrow);
            $("#container").append(record);


        }//CreateRow()


</script>


<script>


        function SubmitRow(rowid) {

            window.alert(`Submitting Skill Row ${rowid}...`);

            var rowCategoryID = rowid + "_skillcategory";
            var rowPointID = rowid + "_skillpoint";

            //window.alert(`Looking for ${rowCategoryID} and ${rowPointID}`);

            //The aim is to submit a record using rowid as the target parent
            var parent = document.getElementById(rowid);
            var parentVal = parent.innerHTML;
            //window.alert(parentVal);


            //https://stackoverflow.com/questions/15268854/getelementbyid-for-children-of-an-element

            var category = document.getElementById(rowCategoryID).value;
            var point = document.getElementById(rowPointID).value;
            var appid = @id;

            if (category == "") category = "General";

            window.alert(`${category} - ${point}`);


            window.alert("Standby...");

            //NOW ADD AJAX FUNCTION TO POST TO CONTROLLER METHOD:
            if(point != "") PostRows(category, point, appid);





        }//SubmitRow()

        function SubmitAllRows() {

            window.alert('Submitting ALL Skill Rows...');

            //window.alert(count+" rows to sumbit");


            //var category = document.querySelector(`[id*="${i}_skillcategory"]`);

            //https://www.formget.com/javascript-submit-form/
            //document.getElementById("skillform").submit();

            //PULL ALL ROWS WITH REQUIRED ID DATA ON PAGE USING PARTIAL DATA SEARCH:
            //https://bobbyhadz.com/blog/javascript-get-element-by-id-contains
            var categoryNodeList = document.querySelectorAll(`[id*="_skillcategory"]`);

            //PULL ALL ROWS WITH REQUIRED ID DATA ON PAGE USING PARTIAL DATA SEARCH:
            var pointNodeList = document.querySelectorAll(`[id*="_skillpoint"]`);


            //Length of NodeList
            var lengthCategory = categoryNodeList.length;
            var lengthPoint = pointNodeList.length;
            var len = pointNodeList.length - 1;
            var i;

            //window.alert(lengthCategory);
            //window.alert(len);

            //window.alert(`Category - ${lengthCategory} Point - ${lengthPoint}`);

            //https://stackoverflow.com/questions/7459704/in-javascript-what-is-the-best-way-to-convert-a-nodelist-to-an-array
            Array.from(categoryNodeList).forEach(function (skillcategory) {
                //window.alert(skillcategory.value);

                //if (skillcategory.value == "") window.alert("No value entered");

            });



            Array.from(pointNodeList).forEach(function (skillpoint) {
                //window.alert(skillpoint.value);

                //if (skillpoint.value == "") window.alert("No value entered");

            });


            //window.alert(categoryNodeList[0].value);
            //window.alert(pointNodeList[0].value);


            for (i = 0; i <= len; i++) {


                if (categoryNodeList[i].value == "" && pointNodeList[i].value != "") {

                    categoryNodeList[i].value = "General";

                }

                window.alert(`${categoryNodeList[i].value} - ${pointNodeList[i].value}`);

                //Once skillpoint is NOT EMPTY, proceed to add to database via Ajax and Controller Action:
                if (pointNodeList[i].value != "") {

                    var category = categoryNodeList[i].value;
                    var point = pointNodeList[i].value;
                    var appid = @id;

                    PostRows(category, point, appid);

                }//end if

            }//end for

            //Delete all used fields
            RemoveAllRows();



        }//SubmitAllRows()



        function PostRows(category, point, appid){

            window.alert('Posting Rows...');


            //AJAX START
            $.ajax({

                type: 'POST',
                url: '@Url.Action("AddSkillsFormActionQuery")',
                data: {
                    skillCategory: category,
                    skillPoint: point,
                    applicantID: appid
                }

            })//end ajax
            //AJAX STOP


        }//PostRows()


</script>



<form id="skillform">

    <!-- <input id="bulksubmit" type="submit" class="btn btn-primary" value="SUBMIT ALL ROWS"> -->

    <div id="main" class="form-group">
        <!-- THIS IS WHERE A NEWLY CREATED ROWS WILL APPEAR-->
        <div id="container">
            <div id="totalremoval"></div>
        </div>
    </div>

</form>