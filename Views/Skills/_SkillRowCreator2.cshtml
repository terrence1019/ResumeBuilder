
@model RésuméBuilder.ViewModels.SkillsViewModel


@{
    int id = Convert.ToInt32(Session["id"]);
    int count = Convert.ToInt32(Session["counter"]);
}

<form>

    <div>

        <button type="button" onclick="RemoveRow(this)">[DELETE]</button>
        <button type="button" onclick="SubmitRow(this)">[SUBMIT]</button>

        <!-- APPLICANT ID: AUTOMATICALLY SET TO SPECIFIC VALUE -->
        <!-- This input field will be passed with the rest of the form data
         it ensures consistency of ApplicantID between Applicant and Personal.
         Hidden in a <div> to prevent accidental changes or tampering
    -->
        <div hidden>
            <input name="applicantID" type="number" value="@id" />
        </div>


        <div>

            <input name="SkillCategory" type="text" id="skillcategory" />
            <input name="SkillPoint" type="text" id="skillpoint" />

        </div>



        <!-- <input type="button" id='mybutton' value="[POST]" /> -->
        <!-- FORM DATA SUBMISSION -->
        <!-- <input id="submit" type="submit" class="btn btn-primary" value="SUBMIT"> -->

    </div>

</form>




<script type="text/javascript">



    //REMOVE A SINGLE SKILL ROW
    function RemoveRow(elem) {

        //To Delete an item using remove(), it requires the parent to be deleted.
        //Therefore, to work effectively, the child item should be stored in a parent,
        //such as a <div>
        elem.parentElement.remove();

    }//RemoveRow()

    //SUBMIT A SINGLE SKILL ROW
    //https://stackoverflow.com/questions/311579/how-do-i-select-the-parent-form-based-on-which-submit-button-is-clicked
    //
    //
    //
    function SubmitRow() {
        
        this.SubmitSkillRow();

        
       

    }//SubmitRow()


</script>


@{
    //https://stackoverflow.com/questions/25557278/invoking-a-controllers-action-by-button-in-view-without-redirecting-to-any-view
}

<script>

    $('#mybutton').click(function () {

        SubmitSkillRow();
        window.alert("Submission Complete!");
        RemoveRow(this);

    });


    function SubmitSkillRow(){
            
            window.alert('Submitting Skill Row...');


            var category = $("#skillcategory").val();
            var point = $("#skillpoint").val();
            var appid = @id;

            //AJAX START
            $.ajax({

                type: 'POST',
                url: '@Url.Action("AddSkillsFormActionQuery")',
                data: {
                    skillCategory: category,
                    skillPoint: point,
                    applicantID: appid
                }

            })//end ajax




            //AJAX STOP


        }//SubmitSkillRow()

</script>