<!--


  Understanding State and Statelessness:
  https://www.c-sharpcorner.com/UploadFile/de41d6/view-state-vs-session-state-vs-application-state/

-->
<!-- JQUERY SCRIPTS FOR PERFORMING SPECIFIC FUNCTIONS -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script src="/scripts/jquery-3.1.1.min.js"></script>
<script src="https://code.jquery.com/jquery-2.2.3.min.js"
        integrity="sha256-a23g1Nt4dtEYOj7bR+vTu7+T8VP13humZFBJNIYoEJo="
        crossorigin="anonymous">
</script>


@model RésuméBuilder.ViewModels.SkillsViewModel





@{
    ViewBag.Title = "AddSkillsPageView";

    //This value correlates to the ApplicantID between the Applicant and Personal Models
    var id = ViewBag.TargetID;

}


<body>

    <h2>Add Your Skills</h2>

    <h3>Add Skill Details for Registration ID @id</h3>

    <!-- BASIC ROW ADDITION -->
    <!-- Html.Partial("_SkillRowCreate")-->
    <!--

        FUTURE WORK ===



        Add List to Controller via JS/JQUERY
        Non Sequential Indices


        OPTION A: WILL BE USED FOR SKILLS [WORKING]

        PART 01: [ADD SKILL] BUTTON
        - Add an [ADD SKILL] button. Each Click loads an instance of _SkillRowCreate PartialView

        PART 02: ADD SKILL Using _SkillRowCreate PartialView
        - Submit Button Sends Form Data to Controller Action
        - Each click triggers: load.html("Skill Added to Database!")
        - Add Option to DELETE Button
         - Format: [SUBMIT][DELETE]

        Ajax.BeginForm
        https://www.quizcure.com/jquery/jquery-refresh-div-ajax-click-interval
        https://www.w3schools.com/jquery/jquery_dom_add.asp






        OPTION B:

        PART 01: Use JS/JQUERY to send a JS/JQUERY Form with a List of items to a Controller Action
        PART 02: Let Controller Action Process List with a foreach loop and store items in DB

        Solution: https://stackoverflow.com/questions/8193030/how-get-the-values-of-multi-entries-when-added-in-fly-by-jquery-in-view-of-asp

    -->
    @Html.Partial("_SkillRowCreator")


    <h1>ADD ROWS</h1>

    <table>

        <tbody>

            <tr>
                <td><button id="addrow" type="button">[ADD A SKILL ROW]</button></td>
                <td><button id="submitall" type="button">[SUBMIT ALL ROWS]</button></td>
            </tr>

        </tbody>

    </table>

    <br />

    <script type="text/javascript">

        var count = 0;



        //The aim is that when a new div is dynamically added,
        //the code to call _SkillRowCreate PartialView is triggered based on class/id property

        //AddDivContainer using rowid
        //LoadPartialInDivContainer using rowid

        $("#addrow").click(function () {

            //window.alert("COUNT: " + count);

            var rowid = "row_" + count;
            //window.alert("ROW ID: " + rowid);

            var loadid = "#" + rowid;
            //window.alert("LOAD ID: " + loadid);

            var classid = "submit";

            //https://www.codegrepper.com/code-examples/java/create+a+button+using+javascript
            var skillrow = $(`<div id="${rowid}" class="${classid}"></div></br>`);





            $("#container").append(skillrow);


            function loadPartialCreate() {

                $(loadid).load('/Skills/SkillRowCreator2');
            }

            //SOLUTION: https://www.w3schools.com/jsref/met_win_settimeout.asp
            setTimeout(function () {
                loadPartialCreate()
            }, 1); //1000 = 1 second

            count++;

            //window.alert("Counter is now at " + count);

        });

    </script>


    <script>

    $('#submitall').click(function () {

        window.alert("Submitting All Rows...");

        $('.submit').ready(function () {



            SubmitSkillRow();



        })

        window.alert("All Submissions Successfully Uploaded!");

    });


    function SubmitSkillRow(){

            window.alert('Submitting Skill Row...');


            var category = $("#skillcategory").val();
            var point = $("#skillpoint").val();
            var appid = @id;

            //AJAX START
            $.ajax({

                type: 'POST',
                url: '@Url.Action("AddSkillsFormActionQuery")',
                data: {
                    skillCategory: category,
                    skillPoint: point,
                    applicantID: appid
                }

            })//end ajax




            //AJAX STOP


        }//SubmitSkillRow()

    </script>



    <form>
        <!-- THIS IS WHERE A NEWLY CREATED ROWS WILL APPEAR-->
        <div id="container"></div>
    </form>



</body>