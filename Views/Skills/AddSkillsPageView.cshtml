<!--


  Understanding State and Statelessness:
  https://www.c-sharpcorner.com/UploadFile/de41d6/view-state-vs-session-state-vs-application-state/

-->
<!-- JQUERY SCRIPTS FOR PERFORMING SPECIFIC FUNCTIONS -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script src="/scripts/jquery-3.1.1.min.js"></script>
<script src="https://code.jquery.com/jquery-2.2.3.min.js"
        integrity="sha256-a23g1Nt4dtEYOj7bR+vTu7+T8VP13humZFBJNIYoEJo="
        crossorigin="anonymous">
</script>


@model RésuméBuilder.ViewModels.SkillsViewModel





@{
    ViewBag.Title = "AddSkillsPageView";

    //This value correlates to the ApplicantID between the Applicant and Personal Models
    var id = ViewBag.TargetID;

}


<body>

    <h2>Add Your Skills</h2>

    <h3>Add Skill Details for Registration ID @id</h3>

    <!-- BASIC ROW ADDITION -->
    <!-- Html.Partial("_SkillRowCreate")-->
    <!--

        FUTURE WORK ===



        Add List to Controller via JS/JQUERY
        Non Sequential Indices


        OPTION A: WILL BE USED FOR SKILLS [WORKING]

        PART 01: [ADD SKILL] BUTTON
        - Add an [ADD SKILL] button. Each Click loads an instance of _SkillRowCreate PartialView

        PART 02: ADD SKILL Using _SkillRowCreate PartialView
        - Submit Button Sends Form Data to Controller Action
        - Each click triggers: load.html("Skill Added to Database!")
        - Add Option to DELETE Button
         - Format: [SUBMIT][DELETE]

        Ajax.BeginForm
        https://www.quizcure.com/jquery/jquery-refresh-div-ajax-click-interval
        https://www.w3schools.com/jquery/jquery_dom_add.asp






        OPTION B:

        PART 01: Use JS/JQUERY to send a JS/JQUERY Form with a List of items to a Controller Action
        PART 02: Let Controller Action Process List with a foreach loop and store items in DB

        Solution: https://stackoverflow.com/questions/8193030/how-get-the-values-of-multi-entries-when-added-in-fly-by-jquery-in-view-of-asp

    -->
    <!-- BEST ALTERNATIVE -->
    <!-- Html.Partial("_SkillRowCreator") -->


    <h3>ENTER DATA</h3>

    <table>

        <tbody>

            <tr>
                <td><button id="addrow" type="button">[ADD A SKILL ROW]</button></td>
                <td><button id="submitallrows" type="button" onclick="SubmitAllRows()">[SUBMIT ALL ROWS]</button></td>
                <td><input id="submitallrows" type="button" onclick="SubmitAllRows()" />[SUBMIT ALL ROWS]</td>
                <td><button id="deleteallrows" type="button" onclick="RemoveAllRows()">[DELETE ALL ROWS]</button></td>
            </tr>

        </tbody>

    </table>

    <br />

    <script type="text/javascript">

        var count = 0;
        var rowtracker = 0;



        //The aim is that when a new div is dynamically added,
        //the code to call _SkillRowCreate PartialView is triggered based on class/id property

        //AddDivContainer using rowid
        //LoadPartialInDivContainer using rowid

        $("#addrow").click(function () {


            CreateRow(count);

            //window.alert("COUNT: " + count);
            /*
            var rowid = "row_" + count;
            //window.alert("ROW ID: " + rowid);

            var loadid = "#" + rowid;
            //window.alert("LOAD ID: " + loadid);

            var classid = "submit";

            //https://www.codegrepper.com/code-examples/java/create+a+button+using+javascript
            var skillrow = $(`<div id="${rowid}" class="${classid}"></div></br>`);


            var clickid = "submit" + rowid;
            //window.alert(clickid);


            //SUBMIT ROW BUTTON
            //https://sebhastian.com/javascript-create-button/
            var sub_btn = document.createElement("button");
            sub_btn.innerHTML = "SUBMIT ROW";
            sub_btn.type = "button";
            sub_btn.name = "formBtn";
            sub_btn.class = "submitall";
            sub_btn.id = clickid;
            sub_btn.onclick = function () {
                                
                CheckName(clickid);

            };

            //DELETE ROW BUTTON
            //https://sebhastian.com/javascript-create-button/
            var del_btn = document.createElement("button");
            del_btn.innerHTML = "DELETE ROW";
            del_btn.type = "button";
            del_btn.name = "formBtn";
            del_btn.class = "deleteall";
            del_btn.id = clickid;
            del_btn.onclick = function () {

                RemoveRow(this);

            };


            $("#container").append(skillrow);
            $("#container").append(sub_btn);
            $("#container").append(del_btn);

            function loadPartialCreate() {

                $(loadid).load('/Skills/SkillRowCreator2');
            }

            //SOLUTION: https://www.w3schools.com/jsref/met_win_settimeout.asp
            setTimeout(function () {
                loadPartialCreate()
            }, 1); //1000 = 1 second

            */

            count++;
            rowtracker++;

            //window.alert("Counter is now at " + count);
            
        });

    </script>

    <script>

        function CheckName(x) {

            //To Delete an item using remove(), it requires the parent to be deleted.
            //Therefore, to work effectively, the child item should be stored in a parent,
            //such as a <div>
            AlertName(x);

        }

        function AlertName(x) {

            window.alert("TEST: "+x);

        }



        //REMOVE A SINGLE SKILL ROW
        function RemoveRow(elem) {

            //To Delete an item using remove(), it requires the parent to be deleted.
            //Therefore, to work effectively, the child item should be stored in a parent,
            //such as a <div>
            elem.parentElement.remove();

            //Adjust counter (decrement)
            count--;

        }//RemoveRow()


        //REMOVE ALL ELEMENTS STORED IN A PARENT DIV (BY REMOVING PARENT DIV ITSELF)
        function RemoveDiv() {

            //https://bobbyhadz.com/blog/javascript-remove-parent-element
            const child = document.getElementById('totalremoval');
            
            child.parentElement.remove();

        }//RemoveDiv()


        //CALL FUNCTION TO REMOVE ALL SKILL ROWS
        function RemoveAllRows(elem) {

            //Call RemoveRow() for div with id "totalremoval"
            RemoveDiv();
            

            //Re-add a parent container so that new rows can be added afterwards
            var container = $(`<div id="container"></div></br>`);
            $("#main").append(container);


            //Re-add delete-all div also
            var deletealldiv = $(`<div id="totalremoval"></div>`);
            $("#container").append(deletealldiv);

            //Reset row counter
            count = 0;
            rowtracker = 0;

        }//RemoveAllRows()



    </script>


    <script>

        function CreateRow(count) {

            //window.alert("CREATING ROW: " + count);

            var rowid = "row_" + count;
            //window.alert("ROW ID: " + rowid);

            //var loadid = "#" + rowid;
            //window.alert("LOAD ID: " + loadid);

            var classid = "submit";

            var divOpen = $(`<div>`);
            var divClose = $(`</div></br>`);

            //https://www.codegrepper.com/code-examples/java/create+a+button+using+javascript
            var skillrowOpen = $(`<div id="${rowid}" class="${classid} name="skill" >`);
            var skillrowClose = $(`</div></br>`);

            var clickid = "submit" + rowid;
            //window.alert(clickid);

            var rowCategoryID = rowid + "_skillcategory";
            var rowPointID = rowid + "_skillpoint";

            var inputFieldCategory = $(`<input name="SkillCategory" type="text" class="skillcategory" id="${rowCategoryID}" placeholder="Skill Category" />`);
            var inputFieldPoint = $(`<input name="SkillPoint" type="text" class="skillpoint" id="${rowPointID}" placeholder="Skill Point" />`);

            


            
            //SUBMIT ROW BUTTON
            //https://sebhastian.com/javascript-create-button/
            var sub_btn = document.createElement("button");
            sub_btn.innerHTML = "SUBMIT ROW";
            sub_btn.type = "button";
            sub_btn.name = "formBtn";
            sub_btn.class = "submitall";
            sub_btn.id = clickid;
            sub_btn.onclick = function () {

                CheckName(rowid);
                SubmitRow(rowid);
                window.alert("Submission Complete!");
                RemoveRow(this);

            };

            //DELETE ROW BUTTON
            //https://sebhastian.com/javascript-create-button/
            var del_btn = document.createElement("button");
            del_btn.innerHTML = "DELETE ROW";
            del_btn.type = "button";
            del_btn.name = "formBtn";
            del_btn.class = "deleteall";
            del_btn.id = clickid;
            del_btn.onclick = function () {

                RemoveRow(this);

            };


            var testString =
                divOpen
                    .append(skillrowOpen)
                    .append(inputFieldCategory)
                    .append(inputFieldPoint)
                    .append(sub_btn)
                    .append(del_btn)
                    .append(skillrowClose)
                    .append(divClose);

            var SkillRow =
                divOpen.append(inputFieldCategory).append(divClose);

            var test2 = divOpen.append(
                skillrowOpen.append(
                    inputFieldCategory.append(
                        skillrowClose.append(divClose))));

            //$("#container").append(inputFieldCategory);
            //$("#container").append(SkillRow);
            //$("#container").append(testString);
            $("#container").append(test2);



        }//CreateRow()


    </script>


    <script>


     function SubmitRow(rowid){

         window.alert(`Submitting Skill Row ${rowid}...`);

         var rowCategoryID = rowid + "_skillcategory";
         var rowPointID = rowid + "_skillpoint";

         window.alert(`Looking for ${rowCategoryID} and ${rowPointID}`);

            //The aim is to submit a record using rowid as the target parent
            var parent = document.getElementById(rowid);
            var parentVal = parent.innerHTML;
            window.alert(parentVal);


         //https://stackoverflow.com/questions/15268854/getelementbyid-for-children-of-an-element

         const category = document.getElementById(rowCategoryID).value;
         const skill = document.getElementById(rowPointID).value;

         window.alert(`${category} - ${skill}`);


         window.alert("Standby...");

         //NOW ADD AJAX FUNCTION TO POST TO CONTROLLER METHOD:






    }//SubmitRow()

        function SubmitAllRows(){

            window.alert('Submitting ALL Skill Rows...');

            //window.alert(count+" rows to sumbit");

            //while you haven't reach end of document, scan for class names

            var i;

            for (i = 0; i < rowtracker; i++) {

                window.alert(i);
                
                var rowid = "row_" + i;
                window.alert(rowid);
                var rowCategoryID = rowid + "_skillcategory";
                window.alert(rowCategoryID);

                //if not null do this:
                const x = document.getElementById(rowCategoryID).value;

                if (x != null) window.alert(x);

            }
            

            
            
            



        }//SubmitAllRows()


    </script>


    <form>

        <div id="main">
            <!-- THIS IS WHERE A NEWLY CREATED ROWS WILL APPEAR-->
            <div id="container">
                <div id="totalremoval"></div>
                @*<button id="deleteallrows" type="button" onclick="RemoveAllRows(this)">[DELETE ALL ROWS]</button>*@
            </div>
        </div>

    </form>


</body>