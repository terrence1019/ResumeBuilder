
@model RésuméBuilder.ViewModels.SkillsViewModel


@{
    int id = Convert.ToInt32(Session["id"]);
    int count = Convert.ToInt32(Session["counter"]);
}

<!--

    SOLUTION: https://stackoverflow.com/questions/935915/asp-net-mvc-parameter-from-page-to-a-partial-view

-->

<h1>SKILL ROW [@count] for APPLICANT #@id</h1>

<p>Globals.j = @Globals.j</p>
<p>Globals.i = @Globals.i</p>
<p>TempData["counter"] = @TempData["counter"]</p>
<p>Session["counter"] = @Session["counter"]</p>
<p>ViewData["count"] = @ViewData["count"]</p>



@using (Html.BeginForm("AddSkillsFormAction", "Skills", FormMethod.Post))
{


    <!-- APPLICANT ID: AUTOMATICALLY SET TO SPECIFIC VALUE -->
    <!-- This input field will be passed with the rest of the form data
         it ensures consistency of ApplicantID between Applicant and Personal.
         Hidden in a <div> to prevent accidental changes or tampering
    -->
    <div hidden>
        <input name="applicantID" type="number" value="@id" />
    </div>


    <div class="form-group">

        @Html.LabelFor(s => s.SkillBatch[0].SkillCategory)
        @Html.TextBoxFor(s => s.SkillBatch[0].SkillCategory, new { @class = "form-control" })

        @Html.LabelFor(s => s.SkillBatch[0].SkillPoint)
        @Html.TextBoxFor(s => s.SkillBatch[0].SkillPoint, new { @class = "form-control" })

    </div>

    <!-- FORM DATA SUBMISSION -->
    <input type="submit" class="btn btn-primary" value="Add Skill Record">

}